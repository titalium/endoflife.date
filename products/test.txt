function Get-YouTubeVideo {
    param (
        [string]$VideoUrl = (Read-Host -Prompt "Entrez l'URL de la vidéo YouTube")
    )

    try {
        # Vérifier si l'URL est vide
        if ([string]::IsNullOrWhiteSpace($VideoUrl)) {
            throw "L'URL ne peut pas être vide"
        }

        # Extraire l'ID de la vidéo
        $videoId = if ($VideoUrl -match '(?:youtube\.com\/(?:[^\/]+\/.+\/|(?:v|e(?:mbed)?)\/|.*[?&]v=)|youtu\.be\/)([^"&?\/\s]{11})') {
            $matches[1]
        } else {
            throw "URL YouTube invalide"
        }

        Write-Host "Traitement de la vidéo avec l'ID: $videoId" -ForegroundColor Cyan

        # Construire l'URL de l'API iframe
        $embedUrl = "https://www.youtube.com/embed/$videoId"
        
        # Récupérer la page
        $response = Invoke-WebRequest -Uri $embedUrl -Headers @{
            "User-Agent" = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"
            "Accept" = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"
        }

        # Créer le dossier de destination
        $outputPath = "$HOME\Videos\YouTube"
        if (-not (Test-Path $outputPath)) {
            Write-Host "Création du dossier $outputPath..." -ForegroundColor Yellow
            New-Item -ItemType Directory -Path $outputPath | Out-Null
        }

        $outputFile = Join-Path $outputPath "$videoId.mp4"

        Write-Host "Téléchargement en cours..." -ForegroundColor Yellow
        # Tentative de téléchargement direct
        Invoke-WebRequest -Uri "https://www.youtube.com/get_video_info?video_id=$videoId" -OutFile $outputFile

        Write-Host "Téléchargement terminé: $outputFile" -ForegroundColor Green
    }
    catch {
        Write-Host "Erreur: $_" -ForegroundColor Red
    }
    finally {
        Write-Host "`nAppuyez sur une touche pour quitter..." -ForegroundColor Cyan
        $null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
    }
}

# Exécuter la fonction
Get-YouTubeVideo
